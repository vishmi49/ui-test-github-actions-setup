name: Cypress Tests

on:
  push:
    branches:
      - main
      - github_actions_setup
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-24.04

    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DD_ENV: ci
      DD_SERVICE: cypress-tests
      DD_SITE: app.datadoghq.eu
      DD_CIVISIBILITY_AGENTLESS_ENABLED: "true"
      DD_LOGS_INJECTION: "true"

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Install Datadog CLI
        run: npm install -g @datadog/datadog-ci

      - name: Run Cypress with system usage tracking
        continue-on-error: true
        run: |
          echo "Running Cypress and capturing resource usage..."
          /usr/bin/time -v npx cypress run --browser chrome 2> time.log || true

      - name: Capture CPU/Memory metrics from time output
        run: |
          echo "Extracting CPU and memory stats..."
          CPU_TIME=$(grep "User time (seconds)" time.log | awk '{print $5}')
          MAX_MEM=$(grep "Maximum resident set size" time.log | awk '{print $6}')
          echo "CPU Time: $CPU_TIME"
          echo "Max Memory: $MAX_MEM KB"

          # Convert memory to MB
          MAX_MEM_MB=$((MAX_MEM / 1024))

          # Send custom metrics to Datadog
          datadog-ci metric send --apiKey ${DATADOG_API_KEY} --site ${DD_SITE} \
            --type gauge \
            --points "[[ $(date +%s), $CPU_TIME ]]" \
            --metric "ci.cypress.cpu_time" \
            --tags "env:ci,service:cypress-tests"

          datadog-ci metric send --apiKey ${DATADOG_API_KEY} --site ${DD_SITE} \
            --type gauge \
            --points "[[ $(date +%s), $MAX_MEM_MB ]]" \
            --metric "ci.cypress.max_memory_mb" \
            --tags "env:ci,service:cypress-tests"
        shell: bash

      - name: Merge Mochawesome reports
        run: npx mochawesome-merge cypress/results/*.json > cypress/results/merged-reports.json

      - name: Generate HTML Reports
        run: npx marge cypress/results/merged-reports.json --reportDir cypress/results -f "test-report.html"

      - name: Upload HTML Reports
        uses: actions/upload-artifact@v4
        with:
          name: Cypress HTML Report
          path: cypress/results
